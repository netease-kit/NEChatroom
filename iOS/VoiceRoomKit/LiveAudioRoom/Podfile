# Uncomment the next line to define a global platform for your project
platform :ios, '11.0'

# 引入配置文件
require_relative '../../PodConfigs/config_third.rb'
require_relative '../../PodConfigs/config_local_common.rb'
require_relative '../../PodConfigs/config_local_core.rb'
require_relative '../../PodConfigs/config_local_im.rb'
require_relative '../../PodConfigs/config_local_room.rb'
require_relative '../../PodConfigs/config_local_social.rb'

target 'LiveAudioRoom' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # 工程的podspec引用采用源码的环境变量
  ENV['USE_SOURCE_FILES'] = 'true'

  pod NIMSDK.name, NIMSDK.version
  pod NERtcSDK.RtcBasic, NERtcSDK.version
  pod SDWebImage.name, SDWebImage.version
  pod Masonry.name, Masonry.version
  
  
#源码依赖
  pod 'NEUIKit', :path => '../../UIKit/NEUIKit/NEUIKit.podspec'
  pod 'NEVoiceRoomKit', :path => '../NEVoiceRoomKit/NEVoiceRoomKit.podspec'
  pod 'NEVoiceRoomUIKit', :path => '../NEVoiceRoomUIKit/NEVoiceRoomUIKit.podspec'
  pod 'NEVoiceRoomBaseUIKit', :path => '../NEVoiceRoomBaseUIKit/NEVoiceRoomBaseUIKit.podspec'
  pod 'NEOrderSong', :path => '../NEOrderSong/NEOrderSong.podspec'
  pod 'LottieSwift', :path => '../../third_party/lottie/LottieSwift.podspec'
  pod 'NESocialUIKit', :path => '../../Party/NESocialUIKit/NESocialUIKit.podspec'
  pod 'NEAudioEffectKit', :path => '../../KaraokeKit/NEAudioEffectKit/NEAudioEffectKit.podspec'


#登录
  pod 'NELoginSample',:path => '../../OneOnOne/NELoginSample/NELoginSample.podspec'

#发布需要打开
#远端依赖
#GitPushStart
pod NERoomKit.Special_All , NERoomKit.version
pod NECopyrightedMedia.name , NECopyrightedMedia.version
pod NECommonKit.name , NECommonKit.version
pod NECoreKit.name , '9.6.4'
pod IHProgressHUD.name
pod NECommonUIKit.name , NECommonUIKit.version
#GitPushEnd


end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
  end
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
      end
    end
  end
  installer.aggregate_targets.each do |target|
    target.xcconfigs.each do |variant, xcconfig|
      xcconfig_path = target.client_root + target.xcconfig_relative_path(variant)
      IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("DT_TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
    end
  end
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      if config.base_configuration_reference.is_a? Xcodeproj::Project::Object::PBXFileReference
        xcconfig_path = config.base_configuration_reference.real_path
        IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("DT_TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
      end
    end
  end
end
